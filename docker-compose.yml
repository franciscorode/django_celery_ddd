version: "3.5"

services:
  app:
    restart: on-failure
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      args: &app-args
        PROJECT_NAME: ${PROJECT_NAME}
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
    command: /entrypoints/start-django.sh
    environment: &app-environment
      DJANGO_DEBUG: ${DJANGO_DEBUG:-false}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-src.config.settings}
      PROJECT_NAME: ${PROJECT_NAME:-umibot}
      PROJECT_DJANGO_DIR: ${PROJECT_DJANGO_DIR:-umibot}
      LOGGING_ROOT_DIR: /logs
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      REDIS_HOST: ${REDIS_HOST:-redis}
      CELERY_BROKER: ${CELERY_BROKER:-redis://redis:6379/0}
      CELERY_BACKEND: ${CELERY_BACKEND:-redis://redis:6379/0}
      USER_REPOSITORY_TYPE: ${USER_REPOSITORY_TYPE:-sql}
      EMAIL_SENDER_TYPE: ${EMAIL_SENDER_TYPE:-django}
      BACKGROUND_TASK_EXECUTOR_TYPE: ${BACKGROUND_TASK_EXECUTOR_TYPE:-celery}
      CUSTOMER_SUPPORT_EMAIL: ${CUSTOMER_SUPPORT_EMAIL}
      NOTIFIER_TYPE: ${NOTIFIER_TYPE:-slack}
      SLACK_CHANNEL: ${SLACK_CHANNEL}
      SLACK_TOKEN: ${SLACK_TOKEN}
    ports:
      - "8000"
    volumes:
      - vol_logs:/logs
      - vol_static:/static
    depends_on:
      - postgres
      - redis
    links:
      - postgres

  postgres:
    image: postgres:13.3
    restart: always
    environment:
      POSTGRES_DB: ${PROJECT_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - vol_postgres:/var/lib/postgresql/data
      - vol_logs:/logs
      - ./data/psql_dump.sql:/docker-entrypoint-initdb.d/psql_dump.sql
    shm_size: "128mb"

  redis:
    image: redis:7.0.4-alpine

  celery_worker:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      args:
        <<: *app-args
    command: /entrypoints/start-celery-worker.sh
    environment:
      <<: *app-environment
    volumes:
      - vol_logs:/logs
    depends_on:
      - redis
      - postgres

  flower:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      args:
        <<: *app-args
    command: /entrypoints/start-flower.sh
    environment:
      <<: *app-environment
    ports:
      - 5557:5555
    depends_on:
      - celery_worker
      - app

volumes:
  vol_postgres:
    driver: local
  vol_logs:
    driver: local
  vol_static:
    driver: local